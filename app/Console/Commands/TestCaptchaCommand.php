<?php

namespace App\Console\Commands;

use App\Services\SimpleCaptchaSolver;
use Illuminate\Console\Command;

class TestCaptchaCommand extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'test:captcha {exchanger : –ò–º—è –æ–±–º–µ–Ω–Ω–∏–∫–∞ (obama|ural)}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CAPTCHA –¥–ª—è –æ–±–º–µ–Ω–Ω–∏–∫–æ–≤';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $exchanger = $this->argument('exchanger');

        if (!in_array($exchanger, ['obama', 'ural'])) {
            $this->error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'obama' –∏–ª–∏ 'ural'");
            return 1;
        }

        $this->info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CAPTCHA –¥–ª—è {$exchanger}...");

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ CAPTCHA
        $captchaData = [
            'operation' => '+',
            'captcha1_url' => 'https://example.com/captcha1.png',
            'captcha2_url' => 'https://example.com/captcha2.png'
        ];

        $solver = new SimpleCaptchaSolver();
        $result = $solver->solveArithmeticCaptcha($captchaData);

        if ($result !== null) {
            $this->info("‚úÖ CAPTCHA —Ä–µ—à–µ–Ω–∞: {$result}");
        } else {
            $this->error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–µ—à–∏—Ç—å CAPTCHA");
        }

        return 0;
    }
}












